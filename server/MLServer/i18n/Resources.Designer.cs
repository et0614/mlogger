//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MLServer.i18n {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MLServer.i18n.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Base volt.: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CFF_Bvoltage {
            get {
                return ResourceManager.GetString("CFF_Bvoltage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Corr. value = に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CFF_CValue {
            get {
                return ResourceManager.GetString("CFF_CValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   * Meas. value = に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CFF_MValue {
            get {
                return ResourceManager.GetString("CFF_MValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Correction factors に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CFF_Title {
            get {
                return ResourceManager.GetString("CFF_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Close に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Close {
            get {
                return ResourceManager.GetString("Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date time に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DateTime {
            get {
                return ResourceManager.GetString("DateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   DBT/RH に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DBTandRH {
            get {
                return ResourceManager.GetString("DBTandRH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dry-bulb temperature に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DBTemp {
            get {
                return ResourceManager.GetString("DBTemp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General purpose voltage に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GeneralPurposeVoltage {
            get {
                return ResourceManager.GetString("GeneralPurposeVoltage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Globe temperature に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GlbTemp {
            get {
                return ResourceManager.GetString("GlbTemp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Illuminance に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Illuminance {
            get {
                return ResourceManager.GetString("Illuminance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Interval に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Interval {
            get {
                return ResourceManager.GetString("Interval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Time interval should be set in the range of 1-86400 seconds. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_Alrt_Interval {
            get {
                return ResourceManager.GetString("MF_Alrt_Interval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Invalid input of {0} measurement time interval. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_Alrt_InvalidInput {
            get {
                return ResourceManager.GetString("MF_Alrt_InvalidInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Apply setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_ApplySetting {
            get {
                return ResourceManager.GetString("MF_ApplySetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Connect に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_Connect {
            get {
                return ResourceManager.GetString("MF_Connect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Connect to XBee (coordinator) via COM port に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_Connect_Def {
            get {
                return ResourceManager.GetString("MF_Connect_Def", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Connection succeeded. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_ConnectionSucceeded {
            get {
                return ResourceManager.GetString("MF_ConnectionSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Connect to XBee (coordinator) on {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_ConnectPort {
            get {
                return ResourceManager.GetString("MF_ConnectPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Disconnect に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_Disconnect {
            get {
                return ResourceManager.GetString("MF_Disconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Disconnect the COM port Xbee (coordinator) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_Disconnect_Def {
            get {
                return ResourceManager.GetString("MF_Disconnect_Def", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Disconnect to XBee (coordinator) on {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_DisconnectPort {
            get {
                return ResourceManager.GetString("MF_DisconnectPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Editable に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_Editable {
            get {
                return ResourceManager.GetString("MF_Editable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to load &apos;cf.ini&apos;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_ErrCF {
            get {
                return ResourceManager.GetString("MF_ErrCF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unable to write to {0}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_FileIsUsing {
            get {
                return ResourceManager.GetString("MF_FileIsUsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Initializing に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_Initializing {
            get {
                return ResourceManager.GetString("MF_Initializing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Measure に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_MeasureCBX {
            get {
                return ResourceManager.GetString("MF_MeasureCBX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Measuring に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_Measuring {
            get {
                return ResourceManager.GetString("MF_Measuring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mesaurement starting date time に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_MStartDTime {
            get {
                return ResourceManager.GetString("MF_MStartDTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Attempt to connect to the following ports:  に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_PortChg {
            get {
                return ResourceManager.GetString("MF_PortChg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_Search {
            get {
                return ResourceManager.GetString("MF_Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search the MLogger (XBee end-device) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_Search_Def {
            get {
                return ResourceManager.GetString("MF_Search_Def", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set correction factors に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_SetCorrectionFactors {
            get {
                return ResourceManager.GetString("MF_SetCorrectionFactors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Start data collecting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_StartDataCollecting {
            get {
                return ResourceManager.GetString("MF_StartDataCollecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Start logging (SD card) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_StartLoggingToSDCard {
            get {
                return ResourceManager.GetString("MF_StartLoggingToSDCard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Start searching MLogger (Port {0})... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_StartSearch {
            get {
                return ResourceManager.GetString("MF_StartSearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Try to connect XBee (coordinator) on {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MF_TryConnectPort {
            get {
                return ResourceManager.GetString("MF_TryConnectPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Proximity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Proximity {
            get {
                return ResourceManager.GetString("Proximity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Radiative temperature に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string RadTemp {
            get {
                return ResourceManager.GetString("RadTemp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Relative humidity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string RHumid {
            get {
                return ResourceManager.GetString("RHumid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Set {
            get {
                return ResourceManager.GetString("Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Status に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Status {
            get {
                return ResourceManager.GetString("Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;html lang=&quot;ja&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;utf-8&quot;&gt;
        ///    &lt;meta name=&quot;robots&quot; content=&quot;noindex,nofollow&quot;&gt;
        ///    &lt;title&gt;Measurement status&lt;/title&gt;
        ///    &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;
        ///&lt;/head&gt;
        ///&lt;body&gt;
        ///
        ///    &lt;h2&gt;Measurement status&lt;/h2&gt;
        ///
        ///    &lt;b&gt;No. of MLoggers connected:&lt;/b&gt;&lt;!--ML_NUMBER--&gt; unit(s)&lt;br&gt;&lt;br&gt;
        ///    &lt;b&gt;List of MLoggers:&lt;/b&gt;&lt;br&gt;
        ///    &lt;div id=&quot;loggers&quot;&gt;
        ///        Filtering &lt;input class=&quot;search&quot;&gt;&lt;br&gt;&lt;br&gt;
        ///        &lt;table align=&quot;left&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///               [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string topPage_html {
            get {
                return ResourceManager.GetString("topPage_html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Velocity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Velocity {
            get {
                return ResourceManager.GetString("Velocity", resourceCulture);
            }
        }
    }
}
